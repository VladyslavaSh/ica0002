- name: Install bind9
  ansible.builtin.apt:
    name:
      - bind9
      - python3-dnspython

- name: Copy named.conf.options file
  ansible.builtin.template:
     dest: /etc/bind/named.conf.options
     src: named.conf.options.j2
  notify: Restart bind9

- name: Copy named.conf.local file
  ansible.builtin.template:
     dest: /etc/bind/named.conf.local
     src: named.conf.local.j2
  notify: Restart bind9

- name: Copy zone file
  ansible.builtin.template:
     dest: /var/cache/bind/db.{{ startup_name }}
     src: db.vlada.vld.j2
     force: no
  notify: Restart bind9
  when: inventory_hostname in groups['dns_masters']

- name: Copy reverse zone file
  ansible.builtin.template:
      dest: /var/cache/bind/db.rev
      src: db.rev.j2
      force: no
  notify: Restart bind9
  when: inventory_hostname in groups['dns_masters']

- name: Run handlers
  meta: flush_handlers

- name: Start bind9
  ansible.builtin.service:
    name: bind9
    state: started
    enabled: yes

- name: A records
  community.general.nsupdate:
     key_name: "update_key"
     key_secret: "{{ update_key }}"
     key_algorithm: "hmac-sha256"
     server: "localhost"
     zone: "{{ startup_name }}."
     record: "{{ item.key }}.{{ startup_name }}."
     value: "{{ item.value }}"
     type: "A"
  loop: "{{ dns_a_records | dict2items }}"
  when: inventory_hostname in groups['dns_masters']

- name: CNAME records
  community.general.nsupdate:
     key_name: "update_key"
     key_secret: "{{ update_key }}"
     key_algorithm: "hmac-sha256"
     server: "localhost"
     zone: "{{ startup_name }}."
     record: "{{ item.key }}.{{ startup_name }}."
     value: "{{ item.value }}.{{ startup_name }}."
     type: "CNAME"
  loop: "{{ dns_cname_records | dict2items }}"
  when: inventory_hostname in groups['dns_masters']
